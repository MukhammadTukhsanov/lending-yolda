{"ast":null,"code":"// Navbar scroll effects and interactions\nexport const initNavbarEffects = () => {\n  // Navbar scroll effect\n  const navbar = document.querySelector('.navbar');\n  if (navbar) {\n    const handleScroll = () => {\n      if (window.scrollY > 50) {\n        navbar.classList.add('navbar-scrolled');\n      } else {\n        navbar.classList.remove('navbar-scrolled');\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up function\n    return () => window.removeEventListener('scroll', handleScroll);\n  }\n\n  // Active navigation link handling\n  const navLinks = document.querySelectorAll('.nav-link-custom');\n  navLinks.forEach(link => {\n    link.addEventListener('click', e => {\n      // Remove active class from all links\n      navLinks.forEach(l => l.classList.remove('active'));\n      // Add active class to clicked link\n      link.classList.add('active');\n\n      // Handle smooth scrolling for anchor links\n      const href = link.getAttribute('href');\n      if (href && href.startsWith('#')) {\n        e.preventDefault();\n        const targetId = href.substring(1);\n        const target = document.getElementById(targetId);\n        if (target) {\n          const offsetTop = target.offsetTop - 80; // Account for fixed navbar\n          window.scrollTo({\n            top: offsetTop,\n            behavior: 'smooth'\n          });\n        }\n      }\n    });\n  });\n\n  // Mobile menu auto-close\n  const navbarToggler = document.querySelector('.navbar-toggler');\n  const navbarCollapse = document.querySelector('.navbar-collapse');\n  if (navbarToggler && navbarCollapse) {\n    // Close mobile menu when clicking on nav links\n    navLinks.forEach(link => {\n      link.addEventListener('click', () => {\n        if (window.innerWidth < 992) {\n          navbarCollapse.classList.remove('show');\n        }\n      });\n    });\n\n    // Close mobile menu when clicking outside\n    document.addEventListener('click', e => {\n      if (!navbar.contains(e.target) && navbarCollapse.classList.contains('show')) {\n        navbarCollapse.classList.remove('show');\n      }\n    });\n  }\n\n  // Animate navbar on page load\n  const animateNavbar = () => {\n    if (navbar) {\n      navbar.style.transform = 'translateY(-100%)';\n      navbar.style.transition = 'transform 0.6s ease';\n      setTimeout(() => {\n        navbar.style.transform = 'translateY(0)';\n      }, 100);\n    }\n  };\n\n  // Initialize animations\n  animateNavbar();\n};\n\n// Initialize when DOM is loaded\nif (typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', initNavbarEffects);\n}","map":{"version":3,"names":["initNavbarEffects","navbar","document","querySelector","handleScroll","window","scrollY","classList","add","remove","addEventListener","removeEventListener","navLinks","querySelectorAll","forEach","link","e","l","href","getAttribute","startsWith","preventDefault","targetId","substring","target","getElementById","offsetTop","scrollTo","top","behavior","navbarToggler","navbarCollapse","innerWidth","contains","animateNavbar","style","transform","transition","setTimeout"],"sources":["/Users/mukhammad/Desktop/lending-yolda/src/utils/navbar.js"],"sourcesContent":["// Navbar scroll effects and interactions\nexport const initNavbarEffects = () => {\n  // Navbar scroll effect\n  const navbar = document.querySelector('.navbar');\n\n  if (navbar) {\n    const handleScroll = () => {\n      if (window.scrollY > 50) {\n        navbar.classList.add('navbar-scrolled');\n      } else {\n        navbar.classList.remove('navbar-scrolled');\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up function\n    return () => window.removeEventListener('scroll', handleScroll);\n  }\n\n  // Active navigation link handling\n  const navLinks = document.querySelectorAll('.nav-link-custom');\n\n  navLinks.forEach((link) => {\n    link.addEventListener('click', (e) => {\n      // Remove active class from all links\n      navLinks.forEach((l) => l.classList.remove('active'));\n      // Add active class to clicked link\n      link.classList.add('active');\n\n      // Handle smooth scrolling for anchor links\n      const href = link.getAttribute('href');\n      if (href && href.startsWith('#')) {\n        e.preventDefault();\n        const targetId = href.substring(1);\n        const target = document.getElementById(targetId);\n        if (target) {\n          const offsetTop = target.offsetTop - 80; // Account for fixed navbar\n          window.scrollTo({\n            top: offsetTop,\n            behavior: 'smooth',\n          });\n        }\n      }\n    });\n  });\n\n  // Mobile menu auto-close\n  const navbarToggler = document.querySelector('.navbar-toggler');\n  const navbarCollapse = document.querySelector('.navbar-collapse');\n\n  if (navbarToggler && navbarCollapse) {\n    // Close mobile menu when clicking on nav links\n    navLinks.forEach((link) => {\n      link.addEventListener('click', () => {\n        if (window.innerWidth < 992) {\n          navbarCollapse.classList.remove('show');\n        }\n      });\n    });\n\n    // Close mobile menu when clicking outside\n    document.addEventListener('click', (e) => {\n      if (!navbar.contains(e.target) && navbarCollapse.classList.contains('show')) {\n        navbarCollapse.classList.remove('show');\n      }\n    });\n  }\n\n  // Animate navbar on page load\n  const animateNavbar = () => {\n    if (navbar) {\n      navbar.style.transform = 'translateY(-100%)';\n      navbar.style.transition = 'transform 0.6s ease';\n\n      setTimeout(() => {\n        navbar.style.transform = 'translateY(0)';\n      }, 100);\n    }\n  };\n\n  // Initialize animations\n  animateNavbar();\n};\n\n// Initialize when DOM is loaded\nif (typeof document !== 'undefined') {\n  document.addEventListener('DOMContentLoaded', initNavbarEffects);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}